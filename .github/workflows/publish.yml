name: Publish
on:
  push:
    tags:
      - v*
  workflow_dispatch:
jobs:
  build-compiled:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-13
          - macos-15
          - ubuntu-24.04
          - windows-2025
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: false
      - run: uv tool run --from cibuildwheel@latest --no-cache --python 3.13 cibuildwheel --output-dir dist
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: dist
  build-pure:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: false
      - run: uv build --python 3.13 --no-cache
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-any
          path: dist
  publish-pypi:
    runs-on: ubuntu-24.04
    if: ${{ github.repository_owner == 'djlint' && startsWith(github.ref, 'refs/tags/')  }}
    needs:
      - build-compiled
      - build-pure
    permissions:
      id-token: write
    steps:
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: false
      - uses: actions/download-artifact@v5
      - run: mkdir dist
      - run: mv wheels-*/* dist
      - run: uv publish --trusted-publishing always --no-cache
  publish-npm:
    runs-on: ubuntu-24.04
    if: ${{ github.repository_owner == 'djlint' && startsWith(github.ref, 'refs/tags/')  }}
    needs:
      - publish-pypi
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          check-latest: true
          registry-url: https://registry.npmjs.org
      - run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
